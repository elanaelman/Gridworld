def-object 'robot '(is_animate can_talk))
(def-object 'office '(is_inanimate))
(def-object 'gas '(is_inanimate is_notedible can_finish (has_cost 2.0)))
(def-object 'pizza '(is_edible can_finish (has_cost 3.0)))
(def-object 'juice '(is_potable can_finish (has_cost 2.0)))
(def-object 'sushi '(is_edible can_finish (has_cost 5.0)))
(def-object 'car '(is_inanimate is_robots has_gaslevel has_speed has_mileage))

(def-roadmap '(home work supermarket gasstation dropoffLoc) 
	'((path1 home 3 supermarket) (path2 home 5 work) (path3 home 4 dropoffLoc)
	  (path4 work 2 supermarket) (path5 work 4 gasstation)
	  (path6 supermarket 2 gasstation) (path7 supermarket 3 dropoffLoc)
	  (path8 dropoffLoc 4 gasstation)))
	  
;;Zag
(place-object 'pizza3 'pizza 'home 0 
	nil ; no associated-things
	; current facts
	'((is_edible pizza3) (can_finish pizza3)
	 )
    nil ; propositional attitudes
)

(place-object 'juice3 'juice 'plaza 0 
	nil ; no associated-things
	; current facts
	'((is_potable juice3) (can_finish juice3)
	 )
    nil ; propositional attitudes
)

(place-object 'pizza1 'pizza 'supermarket 0 
	nil ; no associated-things
	; current facts
	'((is_edible pizza1) (has_cost 3.0) 
	 )
    nil ; propositional attitudes
)

(place-object 'juice1 'juice 'supermarket 0 
	nil ; no associated-things
	; current facts
	'((is_potable juice1) (has_cost 2.0)
	 )
    nil ; propositional attitudes
)
(place-object 'sushi1 'sushi 'supermarket 0 
	nil ; no associated-things
	; current facts
	'((is_edible sushi1) (has_cost 5.0)
	 )
    nil ; propositional attitudes
)

(place-object 'car1 'car 'home 0 
	nil ; no associated-things
	'((is_inanimate car1) (is_robots car1) (has_gaslevel car1 20.0) (has_speed car1 0.0) (has_mileage car1 0.0))
	 )
    nil ; propositional attitudes
)
